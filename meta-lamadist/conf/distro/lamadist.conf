# vi:ft=bitbake
# SPDX-License-Identifier: Apache-2.0

DISTRO = 'lamadist'
DISTRO_NAME = 'LamaDist'
DISTRO_VERSION_BASE = '0.1'
DISTRO_VERSION = "${DISTRO_VERSION_BASE}+snapshot-${METADATA_REVISION}"
DISTRO_CODENAME = 'main'

MAINTAINER = 'Lucas Yamanishi <lamadist@lamawithonel.mozmail.com>'

SDK_VENDOR = '-lamadistsdk'
SDK_VERSION = "${@d.getVar('DISTRO_VERSION').replace('snapshot-${METADATA_REVISION}', 'snapshot')}"
SDK_VERSION[vardepvalue] = "${SDK_VERSION}"

TARGET_VENDOR = '-lamadist'

LOCALCONF_VERSION = '2'

SANITY_TESTED_DISTROS ?= " \
            ubuntu-18.04 \n \
            ubuntu-20.04 \n \
            ubuntu-22.04 \n \
            "

DISTRO_FEATURES ?= 'acl xattr ext2 ipv4 ipv6 pam pci seccomp security systemd usrmerge selinux luks ima rauc virtualization'
DISTRO_FEATURES_NATIVE = 'acl xattr ipv4 ipv6 systemd selinux luks ima'

DISTRO_EXTRA_RDEPENDS += 'packagegroup-core-boot'
DISTRO_EXTRA_RRECOMMENDS += ''

PREFERRED_VERSION_linux-yocto ?= '6.6%'
PREFERRED_VERSION_linux-yocto-rt ?= '6.6%'

SDK_NAME = "${DISTRO}-${TCLIBC}-${SDKMACHINE}-${IMAGE_BASENAME}-${TUNE_PKGARCH}-${MACHINE}"
SDKPATHINSTALL = "/opt/${DISTRO}/${SDK_VERSION}"

PACKAGE_CLASSES = 'package_rpm'

# systemd
INIT_MANAGER = 'systemd'
EFI_PROVIDER = 'systemd-boot'
DISTRO_FEATURES_BACKFILL_CONSIDERED += 'sysvinit'
VIRTUAL-RUNTIME_init_manager = 'systemd'
VIRTUAL-RUNTIME_initscripts = ''
PREFERRED_PROVIDER_virtual/bootloader = 'systemd-boot'
PACKAGECONFIG:append:pn-systemd = ' cryptsetup'

# TODO: Limit IMAGE_TYPES to RAUC crypt bundle, container, VM, and installer.
IMAGE_TYPES = 'squashfs-zst wic.zst ext4 container qcow2'

require conf/distro/include/gcsections.inc
require conf/distro/include/no-static-libs.inc
require conf/distro/include/security_flags.inc
require conf/distro/include/yocto-uninative.inc

INHERIT += 'uninative'

FULL_OPTIMIZATION="-Os -pipe ${DEBUG_FLAGS}"

# Save a little space by disabling wide character support in ncurses
ENABLE_WIDEC = 'false'

# Ensure wide character support is built in the cross-tools, where it's required
ENABLE_WIDEC:class-native = 'true'

# Don't install Native Language Support to save space and build time
USE_NLS='no'

# Don't install locales; they won't work without NLS
IMAGE_LINGUAS = ''

# We need debug symbols so that SPDX license manifests for the kernel work
KERNEL_EXTRA_FEATURES:append = ' features/debug/debug-kernel.scc'

# Enable creation of SPDX manifests by default
INHERIT += 'create-spdx'
SPDX_ARCHIVE_PACKAGED = '0'
SPDX_ARCHIVE_SOURCES  = '1'
SPDX_INCLUDE_SOURCES  = '1'

# Enable CVE checks and reporting
INHERIT += 'cve-check'

# Include the Yocto CVE exclusion list for unfixable CVEs
include conf/distro/include/cve-extra-exclusions.inc

# meta-selinux
FIRST_BOOT_RELABEL                    = '1'
IMAGE_INSTALL:append                  = ' packagegroup-core-selinux'
PREFERRED_PROVIDER_virtual/refpolicy  = 'refpolicy-targeted'
PREFERRED_VERSION_refpolicy           = '2.20240226'
PREFERRED_VERSION_refpolicy-minimum   = '2.20240226'

# meta-secure-core/meta-integrity
SECURE_CORE_IMAGE_EXTRA_INSTALL:append = ' packagegroup-ima'
INHERIT += "sign_rpm_ext ima-evm-rootfs"

# meta-secure-core/meta-encrypted-storage
SECURE_CORE_IMAGE_EXTRA_INSTALL += 'packagegroup-luks'

# meta-security/dm-verity
IMAGE_CLASSES += 'dm-verity-img'
KERNEL_FEATURES:append = ' features/device-mapper/dm-verity.scc'

INITRAMFS_IMAGE = 'dm-verity-image-initramfs'
INITRAMFS_FSTYPES = 'cpio'
INITRAMFS_IMAGE_BUNDLE = '1'

# RAUC


# podman
PACKAGECONFIG:pn-podman += 'rootless'
